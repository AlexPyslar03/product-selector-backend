name: CI  # Имя рабочего процесса (workflow)

on:
  push:  # Запускать при push в ветку main
    branches: [ "main" ]
  pull_request:  # Запускать при pull request в ветку main
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest  # Запускаем тесты на последней версии Ubuntu

    steps:
      - name: Checkout code  # Клонируем репозиторий
        uses: actions/checkout@v3

      - name: Set up JDK 22  # Устанавливаем JDK версии 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'  # Используем дистрибутив Temurin

      - name: Cache Gradle packages  # Кэшируем зависимости Gradle для ускорения сборки
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle wrapper  # Даем права на выполнение Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build and test with Gradle  # Собираем проект и запускаем тесты
        run: ./gradlew clean build jacocoTestReport

      - name: Archive test reports  # Архивируем и сохраняем отчеты о тестировании
        if: always()  # Этот шаг выполняется всегда, даже если предыдущие шаги завершились неудачей
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: build/reports/tests/test  # Путь к тестовым отчетам

      - name: Archive JaCoCo coverage report  # Архивируем отчеты о покрытии кода
        if: always()  # Этот шаг выполняется всегда
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: build/reports/jacoco/test  # Путь к отчетам JaCoCo

      - name: Publish Test Results  # Публикация результатов тестирования (JUnit формат)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-results
          path: build/test-results/test  # Путь к JUnit отчетам

      - name: Publish coverage to Codecov  # Публикация отчета о покрытии кода в Codecov (необязательно)
        if: success()
        uses: codecov/codecov-action@v3
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml  # Путь к XML отчету JaCoCo
          fail_ci_if_error: true  # Прерывать выполнение, если публикация провалена